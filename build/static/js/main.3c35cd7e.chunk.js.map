{"version":3,"sources":["graphql/get-todos.js","component/Todo/index.js","graphql/AddTodo.js","apollo-client.js","component/AddTodo/index.js","App.js","index.js"],"names":["GET_TODOS","gql","_templateObject","Todos","react_default","a","createElement","react_apollo_browser_umd","query","_ref","loading","error","data","className","todos","map","_ref2","title","description","key","concat","ADD_TODO","AddTodo_templateObject","cache","InMemoryCache","apolloClient","ApolloClient","uri","AddTodo","titleInput","descriptionInput","mutation","update","addTodo","ROOT_QUERY","readQuery","writeQuery","id","__typename","name","ref","node","type","onClick","e","preventDefault","variables","value","App","component_AddTodo","Todo","ReactDOM","render","client","src_App","document","getElementById"],"mappings":"+dAEA,IASeA,EATGC,IAAHC,KC6BAC,SA1BD,kBACZC,EAAAC,EAAAC,cAACC,EAAA,MAAD,CACEC,MAAOR,GAEN,SAAAS,GAA8B,IAA3BC,EAA2BD,EAA3BC,QAASC,EAAkBF,EAAlBE,MAAOC,EAAWH,EAAXG,KAClB,OAAIF,EAAgBN,EAAAC,EAAAC,cAAA,wBAChBK,EAAcP,EAAAC,EAAAC,cAAA,sBAGhBF,EAAAC,EAAAC,cAAA,WAASO,UAAU,SACjBT,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,eACGM,EAAKE,MAAMC,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,MAAOC,EAAVF,EAAUE,YAAV,OACdd,EAAAC,EAAAC,cAAA,WAASa,IAAG,GAAAC,OAAKH,EAAL,eACTA,EADH,IAGGC,gPCnBjB,IASeG,EATEpB,IAAHqB,qBCERC,EAAQ,UAAIC,GAOHC,EALM,IAAIC,IAAa,CACpCC,IAJU,gCAKVJ,UC0EaK,EA1EC,WACd,IAAIC,EAAa,GACbC,EAAmB,GAEvB,OACE1B,EAAAC,EAAAC,cAACC,EAAA,SAAD,CACEwB,SAAUV,EACVW,OAAQ,SAACT,EAADd,GAAkC,IAAhBwB,EAAgBxB,EAAxBG,KAAQqB,QAExB,GAAIV,EAAMX,KAAKA,KAAKsB,WAAY,KACtBpB,EAAUS,EAAMY,UAAU,CAChC3B,MAAOR,IADDc,MAIRW,EAAaW,WAAW,CACtB5B,MAAOR,EACPY,KAAM,CACJE,MAAOA,EAAMM,OAAO,CAAC,CACnBiB,GAAI,IACJC,WAAY,OACZrB,MAAOgB,EAAQhB,MACfC,YAAae,EAAQf,qBAQ9B,SAAAe,GAAO,OACN7B,EAAAC,EAAAC,cAAA,WAASO,UAAU,YACjBT,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SACEiC,KAAK,QACLC,IAAK,SAACC,GACJZ,EAAaY,MAInBrC,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,SACEiC,KAAK,cACLC,IAAK,SAACC,GACJX,EAAmBW,MAIzBrC,EAAAC,EAAAC,cAAA,UACEoC,KAAK,SACLC,QAAS,SAACC,GACRA,EAAEC,iBACFZ,EAAQ,CACNa,UAAW,CACT7B,MAAOY,EAAWkB,MAClB7B,YAAaY,EAAiBiB,SAGlClB,EAAWkB,MAAQ,GACnBjB,EAAiBiB,MAAQ,KAX7B,iBC3CGC,EAVH,kBACV5C,EAAAC,EAAAC,cAAA,WAASO,UAAU,YACjBT,EAAAC,EAAAC,cAAA,8BAGAF,EAAAC,EAAAC,cAAC2C,EAAD,MACA7C,EAAAC,EAAAC,cAAC4C,EAAD,QCNJC,IAASC,OAELhD,EAAAC,EAAAC,cAACC,EAAA,eAAD,CACE8C,OAAQ5B,GAERrB,EAAAC,EAAAC,cAACgD,EAAD,OAGJC,SAASC,eAAe","file":"static/js/main.3c35cd7e.chunk.js","sourcesContent":["import gql from 'graphql-tag'\n\nconst GET_TODOS = gql`\n  query GetTodos ($first: Int, $offset: Int) {\n    todos(first: $first, offset: $offset) {\n      title\n      description\n    }\n  }\n`\n\nexport default GET_TODOS\n","import React from 'react'\nimport { Query } from 'react-apollo'\nimport GET_TODOS from '../../graphql/get-todos'\nimport './style.scss'\n\nconst Todos = () => (\n  <Query\n    query={GET_TODOS}\n  >\n    {({ loading, error, data }) => {\n      if (loading) return <li>Loading...</li>\n      if (error) return <li>Error :(</li>\n\n      return (\n        <section className=\"todos\">\n          <header>Todos</header>\n          <section>\n            {data.todos.map(({ title, description }) => (\n              <article key={`${title}new Date()`}>\n                {title}\n                :\n                {description}\n              </article>\n            ))}\n          </section>\n        </section>\n      )\n    } }\n  </Query>\n)\n\nexport default Todos\n","import gql from 'graphql-tag'\n\nconst ADD_TODO = gql`\n  mutation ABC($title: String!, $description: String) {\n    addTodo(title: $title, description: $description) {\n      title\n      description\n    }\n  }\n`\n\nexport default ADD_TODO\n","import ApolloClient from 'apollo-boost'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\n\nconst uri = 'http://localhost:8888/graphql'\nconst cache = new InMemoryCache()\n\nconst apolloClient = new ApolloClient({\n  uri,\n  cache,\n})\n\nexport default apolloClient\n","import React from 'react'\nimport { Mutation } from 'react-apollo'\n\nimport ADD_TODO from '../../graphql/AddTodo'\nimport GET_TODOS from '../../graphql/get-todos'\nimport './style.scss'\nimport apolloClient from '../../apollo-client'\n\nconst AddTodo = () => {\n  let titleInput = ''\n  let descriptionInput = ''\n\n  return (\n    <Mutation\n      mutation={ADD_TODO}\n      update={(cache, { data: { addTodo } }) => {\n        // check to see if the cache exists, TODO why does it not exist in some cases?\n        if (cache.data.data.ROOT_QUERY) {\n          const { todos } = cache.readQuery({\n            query: GET_TODOS,\n          })\n          // optimistic update, write to cache\n          apolloClient.writeQuery({\n            query: GET_TODOS,\n            data: {\n              todos: todos.concat([{\n                id: 100,\n                __typename: 'Todo',\n                title: addTodo.title,\n                description: addTodo.description,\n              }]),\n            },\n          })\n          // apolloClient.queryManager.broadcastQueries()\n        }\n      }}\n    >\n      {addTodo => (\n        <section className=\"add-todo\">\n          <header>Add A Todo</header>\n          <form>\n            <label>\n              <span>Title</span>\n              <input\n                name=\"title\"\n                ref={(node) => {\n                  titleInput = node\n                }}\n              />\n            </label>\n            <label>\n              <span>Description</span>\n              <input\n                name=\"description\"\n                ref={(node) => {\n                  descriptionInput = node\n                }}\n              />\n            </label>\n            <button\n              type=\"submit\"\n              onClick={(e) => {\n                e.preventDefault()\n                addTodo({\n                  variables: {\n                    title: titleInput.value,\n                    description: descriptionInput.value,\n                  },\n                })\n                titleInput.value = ''\n                descriptionInput.value = ''\n              }}\n            >\n              Add Todo\n            </button>\n          </form>\n        </section>\n      )}\n    </Mutation>\n  )\n}\n\nexport default AddTodo\n","import React from 'react'\nimport './app.scss'\n\nimport Todos from './component/Todo'\nimport AddTodo from './component/AddTodo'\n\nconst App = () => (\n  <section className=\"todo-app\">\n    <header>\n      Apollo Todos\n    </header>\n    <AddTodo />\n    <Todos />\n  </section>\n)\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ApolloProvider } from 'react-apollo'\nimport App from './App'\nimport apolloClient from './apollo-client'\n\nReactDOM.render(\n  (\n    <ApolloProvider\n      client={apolloClient}\n    >\n      <App />\n    </ApolloProvider>\n  ),\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}